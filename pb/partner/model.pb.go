// Code generated by protoc-gen-go.
// source: partner/model.proto
// DO NOT EDIT!

/*
Package partner is a generated protocol buffer package.

It is generated from these files:
	partner/model.proto
	partner/partner.proto

It has these top-level messages:
	DeliveryOrder
	Address
	DeliveryOrderInfo
	OrderCustomer
	OrderDropoff
	OrderPickup
	Empty
	AccountInfoResponse
	VersionInfoResponse
	DeliveryOrdersCreateRequest
	DeliveryOrdersCreateResponse
	DeliveryOrdersUpdateStatusRequest
	DeliveryOrdersUpdateStatusResponse
	DeliveryOrdersCancelRequest
	DeliveryOrdersCancelResponse
*/
package partner

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeliveryOrder struct {
	// string service = 1;
	OrderId     string             `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	TotalFee    int64              `protobuf:"varint,3,opt,name=total_fee,json=totalFee" json:"total_fee,omitempty"`
	TotalAmount int64              `protobuf:"varint,4,opt,name=total_amount,json=totalAmount" json:"total_amount,omitempty"`
	Info        *DeliveryOrderInfo `protobuf:"bytes,5,opt,name=info" json:"info,omitempty"`
	Customer    *OrderCustomer     `protobuf:"bytes,6,opt,name=customer" json:"customer,omitempty"`
	// Types that are valid to be assigned to Location:
	//	*DeliveryOrder_LocationId
	//	*DeliveryOrder_LocationAddress
	Location isDeliveryOrder_Location `protobuf_oneof:"location"`
	// Types that are valid to be assigned to Service:
	//	*DeliveryOrder_ServiceDropoff
	//	*DeliveryOrder_ServicePickup
	Service isDeliveryOrder_Service `protobuf_oneof:"service"`
}

func (m *DeliveryOrder) Reset()                    { *m = DeliveryOrder{} }
func (m *DeliveryOrder) String() string            { return proto.CompactTextString(m) }
func (*DeliveryOrder) ProtoMessage()               {}
func (*DeliveryOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isDeliveryOrder_Location interface {
	isDeliveryOrder_Location()
}
type isDeliveryOrder_Service interface {
	isDeliveryOrder_Service()
}

type DeliveryOrder_LocationId struct {
	LocationId string `protobuf:"bytes,7,opt,name=location_id,json=locationId,oneof"`
}
type DeliveryOrder_LocationAddress struct {
	LocationAddress *Address `protobuf:"bytes,8,opt,name=location_address,json=locationAddress,oneof"`
}
type DeliveryOrder_ServiceDropoff struct {
	ServiceDropoff *OrderDropoff `protobuf:"bytes,20,opt,name=service_dropoff,json=serviceDropoff,oneof"`
}
type DeliveryOrder_ServicePickup struct {
	ServicePickup *OrderPickup `protobuf:"bytes,21,opt,name=service_pickup,json=servicePickup,oneof"`
}

func (*DeliveryOrder_LocationId) isDeliveryOrder_Location()      {}
func (*DeliveryOrder_LocationAddress) isDeliveryOrder_Location() {}
func (*DeliveryOrder_ServiceDropoff) isDeliveryOrder_Service()   {}
func (*DeliveryOrder_ServicePickup) isDeliveryOrder_Service()    {}

func (m *DeliveryOrder) GetLocation() isDeliveryOrder_Location {
	if m != nil {
		return m.Location
	}
	return nil
}
func (m *DeliveryOrder) GetService() isDeliveryOrder_Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *DeliveryOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *DeliveryOrder) GetTotalFee() int64 {
	if m != nil {
		return m.TotalFee
	}
	return 0
}

func (m *DeliveryOrder) GetTotalAmount() int64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func (m *DeliveryOrder) GetInfo() *DeliveryOrderInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *DeliveryOrder) GetCustomer() *OrderCustomer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *DeliveryOrder) GetLocationId() string {
	if x, ok := m.GetLocation().(*DeliveryOrder_LocationId); ok {
		return x.LocationId
	}
	return ""
}

func (m *DeliveryOrder) GetLocationAddress() *Address {
	if x, ok := m.GetLocation().(*DeliveryOrder_LocationAddress); ok {
		return x.LocationAddress
	}
	return nil
}

func (m *DeliveryOrder) GetServiceDropoff() *OrderDropoff {
	if x, ok := m.GetService().(*DeliveryOrder_ServiceDropoff); ok {
		return x.ServiceDropoff
	}
	return nil
}

func (m *DeliveryOrder) GetServicePickup() *OrderPickup {
	if x, ok := m.GetService().(*DeliveryOrder_ServicePickup); ok {
		return x.ServicePickup
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DeliveryOrder) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DeliveryOrder_OneofMarshaler, _DeliveryOrder_OneofUnmarshaler, _DeliveryOrder_OneofSizer, []interface{}{
		(*DeliveryOrder_LocationId)(nil),
		(*DeliveryOrder_LocationAddress)(nil),
		(*DeliveryOrder_ServiceDropoff)(nil),
		(*DeliveryOrder_ServicePickup)(nil),
	}
}

func _DeliveryOrder_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DeliveryOrder)
	// location
	switch x := m.Location.(type) {
	case *DeliveryOrder_LocationId:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.LocationId)
	case *DeliveryOrder_LocationAddress:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LocationAddress); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DeliveryOrder.Location has unexpected type %T", x)
	}
	// service
	switch x := m.Service.(type) {
	case *DeliveryOrder_ServiceDropoff:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ServiceDropoff); err != nil {
			return err
		}
	case *DeliveryOrder_ServicePickup:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ServicePickup); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DeliveryOrder.Service has unexpected type %T", x)
	}
	return nil
}

func _DeliveryOrder_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DeliveryOrder)
	switch tag {
	case 7: // location.location_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Location = &DeliveryOrder_LocationId{x}
		return true, err
	case 8: // location.location_address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Address)
		err := b.DecodeMessage(msg)
		m.Location = &DeliveryOrder_LocationAddress{msg}
		return true, err
	case 20: // service.service_dropoff
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OrderDropoff)
		err := b.DecodeMessage(msg)
		m.Service = &DeliveryOrder_ServiceDropoff{msg}
		return true, err
	case 21: // service.service_pickup
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OrderPickup)
		err := b.DecodeMessage(msg)
		m.Service = &DeliveryOrder_ServicePickup{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DeliveryOrder_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DeliveryOrder)
	// location
	switch x := m.Location.(type) {
	case *DeliveryOrder_LocationId:
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.LocationId)))
		n += len(x.LocationId)
	case *DeliveryOrder_LocationAddress:
		s := proto.Size(x.LocationAddress)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// service
	switch x := m.Service.(type) {
	case *DeliveryOrder_ServiceDropoff:
		s := proto.Size(x.ServiceDropoff)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DeliveryOrder_ServicePickup:
		s := proto.Size(x.ServicePickup)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Address struct {
	Number   string `protobuf:"bytes,1,opt,name=number" json:"number,omitempty"`
	Street   string `protobuf:"bytes,2,opt,name=street" json:"street,omitempty"`
	Ward     string `protobuf:"bytes,3,opt,name=ward" json:"ward,omitempty"`
	District string `protobuf:"bytes,4,opt,name=district" json:"district,omitempty"`
	Province string `protobuf:"bytes,5,opt,name=province" json:"province,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country" json:"country,omitempty"`
	Address  string `protobuf:"bytes,9,opt,name=address" json:"address,omitempty"`
	Note     string `protobuf:"bytes,10,opt,name=note" json:"note,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Address) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *Address) GetWard() string {
	if m != nil {
		return m.Ward
	}
	return ""
}

func (m *Address) GetDistrict() string {
	if m != nil {
		return m.District
	}
	return ""
}

func (m *Address) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Address) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

type DeliveryOrderInfo struct {
	OrderCode       string   `protobuf:"bytes,1,opt,name=order_code,json=orderCode" json:"order_code,omitempty"`
	ExtraOrderCode  string   `protobuf:"bytes,2,opt,name=extra_order_code,json=extraOrderCode" json:"extra_order_code,omitempty"`
	Note            string   `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
	OrderTime       int64    `protobuf:"varint,5,opt,name=order_time,json=orderTime" json:"order_time,omitempty"`
	ExpectedTime    int64    `protobuf:"varint,6,opt,name=expected_time,json=expectedTime" json:"expected_time,omitempty"`
	SenderName      string   `protobuf:"bytes,10,opt,name=sender_name,json=senderName" json:"sender_name,omitempty"`
	SenderPhone     string   `protobuf:"bytes,11,opt,name=sender_phone,json=senderPhone" json:"sender_phone,omitempty"`
	SenderEmail     string   `protobuf:"bytes,12,opt,name=sender_email,json=senderEmail" json:"sender_email,omitempty"`
	SenderAddress   *Address `protobuf:"bytes,13,opt,name=sender_address,json=senderAddress" json:"sender_address,omitempty"`
	ReceiverName    string   `protobuf:"bytes,20,opt,name=receiver_name,json=receiverName" json:"receiver_name,omitempty"`
	ReceiverPhone   string   `protobuf:"bytes,21,opt,name=receiver_phone,json=receiverPhone" json:"receiver_phone,omitempty"`
	ReceiverEmail   string   `protobuf:"bytes,22,opt,name=receiver_email,json=receiverEmail" json:"receiver_email,omitempty"`
	ReceiverAddress *Address `protobuf:"bytes,23,opt,name=receiver_address,json=receiverAddress" json:"receiver_address,omitempty"`
}

func (m *DeliveryOrderInfo) Reset()                    { *m = DeliveryOrderInfo{} }
func (m *DeliveryOrderInfo) String() string            { return proto.CompactTextString(m) }
func (*DeliveryOrderInfo) ProtoMessage()               {}
func (*DeliveryOrderInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeliveryOrderInfo) GetOrderCode() string {
	if m != nil {
		return m.OrderCode
	}
	return ""
}

func (m *DeliveryOrderInfo) GetExtraOrderCode() string {
	if m != nil {
		return m.ExtraOrderCode
	}
	return ""
}

func (m *DeliveryOrderInfo) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *DeliveryOrderInfo) GetOrderTime() int64 {
	if m != nil {
		return m.OrderTime
	}
	return 0
}

func (m *DeliveryOrderInfo) GetExpectedTime() int64 {
	if m != nil {
		return m.ExpectedTime
	}
	return 0
}

func (m *DeliveryOrderInfo) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *DeliveryOrderInfo) GetSenderPhone() string {
	if m != nil {
		return m.SenderPhone
	}
	return ""
}

func (m *DeliveryOrderInfo) GetSenderEmail() string {
	if m != nil {
		return m.SenderEmail
	}
	return ""
}

func (m *DeliveryOrderInfo) GetSenderAddress() *Address {
	if m != nil {
		return m.SenderAddress
	}
	return nil
}

func (m *DeliveryOrderInfo) GetReceiverName() string {
	if m != nil {
		return m.ReceiverName
	}
	return ""
}

func (m *DeliveryOrderInfo) GetReceiverPhone() string {
	if m != nil {
		return m.ReceiverPhone
	}
	return ""
}

func (m *DeliveryOrderInfo) GetReceiverEmail() string {
	if m != nil {
		return m.ReceiverEmail
	}
	return ""
}

func (m *DeliveryOrderInfo) GetReceiverAddress() *Address {
	if m != nil {
		return m.ReceiverAddress
	}
	return nil
}

type OrderCustomer struct {
	ReferenceId string `protobuf:"bytes,1,opt,name=reference_id,json=referenceId" json:"reference_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Phone       string `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	Email       string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Address     string `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
}

func (m *OrderCustomer) Reset()                    { *m = OrderCustomer{} }
func (m *OrderCustomer) String() string            { return proto.CompactTextString(m) }
func (*OrderCustomer) ProtoMessage()               {}
func (*OrderCustomer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *OrderCustomer) GetReferenceId() string {
	if m != nil {
		return m.ReferenceId
	}
	return ""
}

func (m *OrderCustomer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrderCustomer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *OrderCustomer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *OrderCustomer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type OrderDropoff struct {
	Fee int64 `protobuf:"varint,1,opt,name=fee" json:"fee,omitempty"`
}

func (m *OrderDropoff) Reset()                    { *m = OrderDropoff{} }
func (m *OrderDropoff) String() string            { return proto.CompactTextString(m) }
func (*OrderDropoff) ProtoMessage()               {}
func (*OrderDropoff) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *OrderDropoff) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

type OrderPickup struct {
	Fee int64 `protobuf:"varint,2,opt,name=fee" json:"fee,omitempty"`
	Cod int64 `protobuf:"varint,3,opt,name=cod" json:"cod,omitempty"`
}

func (m *OrderPickup) Reset()                    { *m = OrderPickup{} }
func (m *OrderPickup) String() string            { return proto.CompactTextString(m) }
func (*OrderPickup) ProtoMessage()               {}
func (*OrderPickup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *OrderPickup) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *OrderPickup) GetCod() int64 {
	if m != nil {
		return m.Cod
	}
	return 0
}

func init() {
	proto.RegisterType((*DeliveryOrder)(nil), "partner.DeliveryOrder")
	proto.RegisterType((*Address)(nil), "partner.Address")
	proto.RegisterType((*DeliveryOrderInfo)(nil), "partner.DeliveryOrderInfo")
	proto.RegisterType((*OrderCustomer)(nil), "partner.OrderCustomer")
	proto.RegisterType((*OrderDropoff)(nil), "partner.OrderDropoff")
	proto.RegisterType((*OrderPickup)(nil), "partner.OrderPickup")
}

func init() { proto.RegisterFile("partner/model.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 721 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xcf, 0x6f, 0x1a, 0x3b,
	0x10, 0xc7, 0xb3, 0x81, 0x00, 0x3b, 0x40, 0xc2, 0xf3, 0x23, 0x79, 0xfb, 0xf2, 0xf4, 0xf4, 0x08,
	0xd1, 0x93, 0x50, 0xd5, 0x80, 0x9a, 0x1e, 0x7a, 0xa8, 0x22, 0x35, 0x3f, 0x5a, 0xc1, 0xa5, 0x89,
	0x56, 0x3d, 0xf5, 0x82, 0x96, 0xf5, 0x40, 0x56, 0x65, 0xd7, 0x2b, 0xaf, 0xa1, 0xc9, 0xbd, 0xc7,
	0xfe, 0x61, 0xbd, 0xf4, 0x7f, 0xaa, 0x3c, 0xb6, 0x37, 0xa0, 0xb6, 0x37, 0xcf, 0x77, 0x3e, 0x1e,
	0xcf, 0x78, 0xc6, 0x86, 0x3f, 0xf3, 0x48, 0xaa, 0x0c, 0xe5, 0x28, 0x15, 0x1c, 0x97, 0xc3, 0x5c,
	0x0a, 0x25, 0x58, 0xdd, 0x8a, 0xfd, 0x6f, 0x15, 0x68, 0xdf, 0xe0, 0x32, 0x59, 0xa3, 0x7c, 0xbc,
	0x95, 0x1c, 0x25, 0xfb, 0x1b, 0x1a, 0x42, 0x2f, 0xa6, 0x09, 0x0f, 0x76, 0x7b, 0xde, 0xc0, 0x0f,
	0xeb, 0x64, 0x4f, 0x38, 0xfb, 0x07, 0x7c, 0x25, 0x54, 0xb4, 0x9c, 0xce, 0x11, 0x83, 0x4a, 0xcf,
	0x1b, 0x54, 0xc2, 0x06, 0x09, 0xef, 0x10, 0xd9, 0x09, 0xb4, 0x8c, 0x33, 0x4a, 0xc5, 0x2a, 0x53,
	0x41, 0x95, 0xfc, 0x4d, 0xd2, 0x2e, 0x49, 0x62, 0x43, 0xa8, 0x26, 0xd9, 0x5c, 0x04, 0x7b, 0x3d,
	0x6f, 0xd0, 0x3c, 0x3f, 0x1e, 0xda, 0x24, 0x86, 0x5b, 0x09, 0x4c, 0xb2, 0xb9, 0x08, 0x89, 0x63,
	0xe7, 0xd0, 0x88, 0x57, 0x85, 0x12, 0x29, 0xca, 0xa0, 0x46, 0x7b, 0x8e, 0xca, 0x3d, 0xc4, 0x5e,
	0x5b, 0x6f, 0x58, 0x72, 0xec, 0x04, 0x9a, 0x4b, 0x11, 0x47, 0x2a, 0x11, 0x99, 0xae, 0xa0, 0xae,
	0x2b, 0x18, 0xef, 0x84, 0xe0, 0xc4, 0x09, 0x67, 0x17, 0xd0, 0x29, 0x91, 0x88, 0x73, 0x89, 0x45,
	0x11, 0x34, 0x28, 0x7c, 0xa7, 0x0c, 0x7f, 0x69, 0xf4, 0xf1, 0x4e, 0x78, 0xe0, 0x58, 0x2b, 0xb1,
	0x37, 0x70, 0x50, 0xa0, 0x5c, 0x27, 0x31, 0x4e, 0xb9, 0x14, 0xb9, 0x98, 0xcf, 0x83, 0x2e, 0xed,
	0x3e, 0xdc, 0x4e, 0xee, 0xc6, 0x38, 0xc7, 0x5e, 0xb8, 0x6f, 0x79, 0xab, 0xb0, 0x0b, 0x70, 0xca,
	0x34, 0x4f, 0xe2, 0x4f, 0xab, 0x3c, 0x38, 0xa4, 0x00, 0xdd, 0xed, 0x00, 0x77, 0xe4, 0x1b, 0x7b,
	0x61, 0xdb, 0xd2, 0x46, 0xb8, 0x02, 0x68, 0xb8, 0x9c, 0xae, 0x7c, 0xa8, 0x5b, 0x67, 0xff, 0xbb,
	0x07, 0x75, 0x97, 0xe3, 0x11, 0xd4, 0xb2, 0x55, 0x3a, 0x43, 0x19, 0x78, 0xd4, 0x42, 0x6b, 0x69,
	0xbd, 0x50, 0x12, 0x51, 0xd9, 0xd6, 0x5a, 0x8b, 0x31, 0xa8, 0x7e, 0x8e, 0x24, 0xa7, 0xa6, 0xfa,
	0x21, 0xad, 0xd9, 0x31, 0x34, 0x78, 0x52, 0x28, 0x99, 0xc4, 0xa6, 0x99, 0x7e, 0x58, 0xda, 0xda,
	0x97, 0x4b, 0xb1, 0x4e, 0xb2, 0x18, 0xa9, 0x9b, 0x7e, 0x58, 0xda, 0x2c, 0x80, 0x7a, 0xac, 0xdb,
	0x2d, 0x1f, 0xa9, 0x69, 0x7e, 0xe8, 0x4c, 0xed, 0x71, 0xf7, 0xed, 0x1b, 0x8f, 0x35, 0xf5, 0xf9,
	0x99, 0x50, 0x18, 0x80, 0x39, 0x5f, 0xaf, 0xfb, 0x5f, 0xaa, 0xf0, 0xc7, 0x4f, 0x93, 0xc1, 0xfe,
	0x05, 0x30, 0xe3, 0x19, 0x0b, 0x8e, 0xb6, 0x3a, 0x9f, 0x94, 0x6b, 0xc1, 0x91, 0x0d, 0xa0, 0x83,
	0x0f, 0x4a, 0x46, 0xd3, 0x0d, 0xc8, 0x94, 0xba, 0x4f, 0xfa, 0x6d, 0x49, 0xba, 0x23, 0x2b, 0x4f,
	0x47, 0x3e, 0x05, 0x57, 0x49, 0x6a, 0x0a, 0xab, 0xd8, 0xe0, 0x1f, 0x92, 0x14, 0xd9, 0x29, 0xb4,
	0xf1, 0x21, 0xc7, 0x58, 0x21, 0x37, 0x44, 0x8d, 0x88, 0x96, 0x13, 0x09, 0xfa, 0x0f, 0x9a, 0x05,
	0x66, 0x3a, 0x48, 0x16, 0xa5, 0xae, 0x22, 0x30, 0xd2, 0xfb, 0x28, 0xa5, 0x87, 0x62, 0x81, 0xfc,
	0x5e, 0x64, 0x18, 0x34, 0x89, 0xb0, 0x9b, 0xee, 0xb4, 0xb4, 0x81, 0x60, 0x1a, 0x25, 0xcb, 0xa0,
	0xb5, 0x89, 0xbc, 0xd5, 0x12, 0x7b, 0xa5, 0x67, 0x88, 0x10, 0x77, 0xa5, 0xed, 0x5f, 0x8f, 0xb0,
	0x9e, 0x1e, 0xcd, 0xb9, 0xd1, 0x38, 0x85, 0xb6, 0xc4, 0x18, 0xf5, 0xb5, 0x9a, 0x0c, 0xbb, 0x14,
	0xbc, 0xe5, 0x44, 0xca, 0xf1, 0x7f, 0xd8, 0x2f, 0x21, 0x93, 0xe5, 0x21, 0x51, 0xe5, 0x56, 0x93,
	0xe7, 0x26, 0x66, 0x32, 0x3d, 0xda, 0xc6, 0x4c, 0xae, 0xaf, 0xa1, 0x53, 0x62, 0x2e, 0xdb, 0xbf,
	0x7e, 0x93, 0xed, 0x81, 0x23, 0xad, 0xd0, 0xff, 0xea, 0x41, 0x7b, 0xeb, 0xb1, 0xeb, 0xdb, 0x91,
	0x38, 0x47, 0x89, 0x59, 0x8c, 0xfa, 0x8d, 0x9b, 0x21, 0x68, 0x96, 0xda, 0x84, 0x53, 0x73, 0x75,
	0x6d, 0xbb, 0xb6, 0xb9, 0xba, 0xa6, 0x2e, 0xec, 0x99, 0x52, 0x4c, 0xc7, 0x8d, 0xa1, 0x55, 0x93,
	0xb9, 0x19, 0x71, 0x63, 0x6c, 0x4e, 0xea, 0xde, 0xd6, 0xa4, 0xf6, 0x7b, 0xd0, 0xda, 0x7c, 0xdd,
	0xac, 0x03, 0x15, 0xfd, 0x1b, 0x7a, 0x34, 0x09, 0x7a, 0xd9, 0x7f, 0x01, 0xcd, 0x8d, 0xe7, 0xeb,
	0x80, 0xdd, 0x12, 0xd0, 0x4a, 0x2c, 0xb8, 0xfd, 0x40, 0xf5, 0xf2, 0xea, 0xf9, 0xc7, 0x67, 0x8b,
	0x44, 0xdd, 0xaf, 0x66, 0xc3, 0x58, 0xa4, 0xa3, 0x6c, 0x71, 0xb6, 0x5e, 0x8d, 0x16, 0xe2, 0x6c,
	0x21, 0xf3, 0xf8, 0xac, 0x88, 0xd2, 0x7c, 0x89, 0xa3, 0x7c, 0x36, 0xb2, 0x57, 0x35, 0xab, 0xd1,
	0x1f, 0xfe, 0xf2, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x89, 0x90, 0x8e, 0xda, 0x05, 0x00,
	0x00,
}
