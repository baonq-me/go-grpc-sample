// Code generated by protoc-gen-go.
// source: partner/partner.proto
// DO NOT EDIT!

package partner

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_rpc "google.golang.org/genproto/googleapis/rpc/status"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type AccountInfoResponse struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Codename string `protobuf:"bytes,2,opt,name=codename" json:"codename,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *AccountInfoResponse) Reset()                    { *m = AccountInfoResponse{} }
func (m *AccountInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*AccountInfoResponse) ProtoMessage()               {}
func (*AccountInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *AccountInfoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AccountInfoResponse) GetCodename() string {
	if m != nil {
		return m.Codename
	}
	return ""
}

func (m *AccountInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type VersionInfoResponse struct {
	Service     string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Version     string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	UpdatedTime int64  `protobuf:"varint,3,opt,name=updated_time,json=updatedTime" json:"updated_time,omitempty"`
}

func (m *VersionInfoResponse) Reset()                    { *m = VersionInfoResponse{} }
func (m *VersionInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*VersionInfoResponse) ProtoMessage()               {}
func (*VersionInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *VersionInfoResponse) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *VersionInfoResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionInfoResponse) GetUpdatedTime() int64 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

type DeliveryOrdersCreateRequest struct {
	Partner string           `protobuf:"bytes,1,opt,name=partner" json:"partner,omitempty"`
	Orders  []*DeliveryOrder `protobuf:"bytes,2,rep,name=orders" json:"orders,omitempty"`
}

func (m *DeliveryOrdersCreateRequest) Reset()                    { *m = DeliveryOrdersCreateRequest{} }
func (m *DeliveryOrdersCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*DeliveryOrdersCreateRequest) ProtoMessage()               {}
func (*DeliveryOrdersCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *DeliveryOrdersCreateRequest) GetPartner() string {
	if m != nil {
		return m.Partner
	}
	return ""
}

func (m *DeliveryOrdersCreateRequest) GetOrders() []*DeliveryOrder {
	if m != nil {
		return m.Orders
	}
	return nil
}

type DeliveryOrdersCreateResponse struct {
	OrderSuccess map[string]string             `protobuf:"bytes,1,rep,name=order_success,json=orderSuccess" json:"order_success,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	OrderErrors  map[string]*google_rpc.Status `protobuf:"bytes,2,rep,name=order_errors,json=orderErrors" json:"order_errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *DeliveryOrdersCreateResponse) Reset()                    { *m = DeliveryOrdersCreateResponse{} }
func (m *DeliveryOrdersCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*DeliveryOrdersCreateResponse) ProtoMessage()               {}
func (*DeliveryOrdersCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *DeliveryOrdersCreateResponse) GetOrderSuccess() map[string]string {
	if m != nil {
		return m.OrderSuccess
	}
	return nil
}

func (m *DeliveryOrdersCreateResponse) GetOrderErrors() map[string]*google_rpc.Status {
	if m != nil {
		return m.OrderErrors
	}
	return nil
}

type DeliveryOrdersUpdateStatusRequest struct {
}

func (m *DeliveryOrdersUpdateStatusRequest) Reset()         { *m = DeliveryOrdersUpdateStatusRequest{} }
func (m *DeliveryOrdersUpdateStatusRequest) String() string { return proto.CompactTextString(m) }
func (*DeliveryOrdersUpdateStatusRequest) ProtoMessage()    {}
func (*DeliveryOrdersUpdateStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{5}
}

type DeliveryOrdersUpdateStatusResponse struct {
}

func (m *DeliveryOrdersUpdateStatusResponse) Reset()         { *m = DeliveryOrdersUpdateStatusResponse{} }
func (m *DeliveryOrdersUpdateStatusResponse) String() string { return proto.CompactTextString(m) }
func (*DeliveryOrdersUpdateStatusResponse) ProtoMessage()    {}
func (*DeliveryOrdersUpdateStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{6}
}

type DeliveryOrdersCancelRequest struct {
}

func (m *DeliveryOrdersCancelRequest) Reset()                    { *m = DeliveryOrdersCancelRequest{} }
func (m *DeliveryOrdersCancelRequest) String() string            { return proto.CompactTextString(m) }
func (*DeliveryOrdersCancelRequest) ProtoMessage()               {}
func (*DeliveryOrdersCancelRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

type DeliveryOrdersCancelResponse struct {
}

func (m *DeliveryOrdersCancelResponse) Reset()                    { *m = DeliveryOrdersCancelResponse{} }
func (m *DeliveryOrdersCancelResponse) String() string            { return proto.CompactTextString(m) }
func (*DeliveryOrdersCancelResponse) ProtoMessage()               {}
func (*DeliveryOrdersCancelResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func init() {
	proto.RegisterType((*Empty)(nil), "partner.Empty")
	proto.RegisterType((*AccountInfoResponse)(nil), "partner.AccountInfoResponse")
	proto.RegisterType((*VersionInfoResponse)(nil), "partner.VersionInfoResponse")
	proto.RegisterType((*DeliveryOrdersCreateRequest)(nil), "partner.DeliveryOrdersCreateRequest")
	proto.RegisterType((*DeliveryOrdersCreateResponse)(nil), "partner.DeliveryOrdersCreateResponse")
	proto.RegisterType((*DeliveryOrdersUpdateStatusRequest)(nil), "partner.DeliveryOrdersUpdateStatusRequest")
	proto.RegisterType((*DeliveryOrdersUpdateStatusResponse)(nil), "partner.DeliveryOrdersUpdateStatusResponse")
	proto.RegisterType((*DeliveryOrdersCancelRequest)(nil), "partner.DeliveryOrdersCancelRequest")
	proto.RegisterType((*DeliveryOrdersCancelResponse)(nil), "partner.DeliveryOrdersCancelResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BluePartner service

type BluePartnerClient interface {
	VersionInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionInfoResponse, error)
	AccountInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AccountInfoResponse, error)
	DeliveryOrdersCreate(ctx context.Context, in *DeliveryOrdersCreateRequest, opts ...grpc.CallOption) (*DeliveryOrdersCreateResponse, error)
	DeliveryOrdersUpdateStatus(ctx context.Context, in *DeliveryOrdersUpdateStatusRequest, opts ...grpc.CallOption) (*DeliveryOrdersUpdateStatusResponse, error)
	DeliveryOrdersCancel(ctx context.Context, in *DeliveryOrdersCancelRequest, opts ...grpc.CallOption) (*DeliveryOrdersCancelResponse, error)
}

type bluePartnerClient struct {
	cc *grpc.ClientConn
}

func NewBluePartnerClient(cc *grpc.ClientConn) BluePartnerClient {
	return &bluePartnerClient{cc}
}

func (c *bluePartnerClient) VersionInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionInfoResponse, error) {
	out := new(VersionInfoResponse)
	err := grpc.Invoke(ctx, "/partner.BluePartner/VersionInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bluePartnerClient) AccountInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AccountInfoResponse, error) {
	out := new(AccountInfoResponse)
	err := grpc.Invoke(ctx, "/partner.BluePartner/AccountInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bluePartnerClient) DeliveryOrdersCreate(ctx context.Context, in *DeliveryOrdersCreateRequest, opts ...grpc.CallOption) (*DeliveryOrdersCreateResponse, error) {
	out := new(DeliveryOrdersCreateResponse)
	err := grpc.Invoke(ctx, "/partner.BluePartner/DeliveryOrdersCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bluePartnerClient) DeliveryOrdersUpdateStatus(ctx context.Context, in *DeliveryOrdersUpdateStatusRequest, opts ...grpc.CallOption) (*DeliveryOrdersUpdateStatusResponse, error) {
	out := new(DeliveryOrdersUpdateStatusResponse)
	err := grpc.Invoke(ctx, "/partner.BluePartner/DeliveryOrdersUpdateStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bluePartnerClient) DeliveryOrdersCancel(ctx context.Context, in *DeliveryOrdersCancelRequest, opts ...grpc.CallOption) (*DeliveryOrdersCancelResponse, error) {
	out := new(DeliveryOrdersCancelResponse)
	err := grpc.Invoke(ctx, "/partner.BluePartner/DeliveryOrdersCancel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BluePartner service

type BluePartnerServer interface {
	VersionInfo(context.Context, *Empty) (*VersionInfoResponse, error)
	AccountInfo(context.Context, *Empty) (*AccountInfoResponse, error)
	DeliveryOrdersCreate(context.Context, *DeliveryOrdersCreateRequest) (*DeliveryOrdersCreateResponse, error)
	DeliveryOrdersUpdateStatus(context.Context, *DeliveryOrdersUpdateStatusRequest) (*DeliveryOrdersUpdateStatusResponse, error)
	DeliveryOrdersCancel(context.Context, *DeliveryOrdersCancelRequest) (*DeliveryOrdersCancelResponse, error)
}

func RegisterBluePartnerServer(s *grpc.Server, srv BluePartnerServer) {
	s.RegisterService(&_BluePartner_serviceDesc, srv)
}

func _BluePartner_VersionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BluePartnerServer).VersionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.BluePartner/VersionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BluePartnerServer).VersionInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BluePartner_AccountInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BluePartnerServer).AccountInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.BluePartner/AccountInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BluePartnerServer).AccountInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BluePartner_DeliveryOrdersCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliveryOrdersCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BluePartnerServer).DeliveryOrdersCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.BluePartner/DeliveryOrdersCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BluePartnerServer).DeliveryOrdersCreate(ctx, req.(*DeliveryOrdersCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BluePartner_DeliveryOrdersUpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliveryOrdersUpdateStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BluePartnerServer).DeliveryOrdersUpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.BluePartner/DeliveryOrdersUpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BluePartnerServer).DeliveryOrdersUpdateStatus(ctx, req.(*DeliveryOrdersUpdateStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BluePartner_DeliveryOrdersCancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliveryOrdersCancelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BluePartnerServer).DeliveryOrdersCancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.BluePartner/DeliveryOrdersCancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BluePartnerServer).DeliveryOrdersCancel(ctx, req.(*DeliveryOrdersCancelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BluePartner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "partner.BluePartner",
	HandlerType: (*BluePartnerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VersionInfo",
			Handler:    _BluePartner_VersionInfo_Handler,
		},
		{
			MethodName: "AccountInfo",
			Handler:    _BluePartner_AccountInfo_Handler,
		},
		{
			MethodName: "DeliveryOrdersCreate",
			Handler:    _BluePartner_DeliveryOrdersCreate_Handler,
		},
		{
			MethodName: "DeliveryOrdersUpdateStatus",
			Handler:    _BluePartner_DeliveryOrdersUpdateStatus_Handler,
		},
		{
			MethodName: "DeliveryOrdersCancel",
			Handler:    _BluePartner_DeliveryOrdersCancel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "partner/partner.proto",
}

func init() { proto.RegisterFile("partner/partner.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 636 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x9d, 0xb6, 0xa1, 0xe3, 0xd2, 0x9f, 0x6d, 0xa1, 0x91, 0x69, 0x51, 0xbb, 0x14, 0x29,
	0x0a, 0xd4, 0x16, 0x45, 0x02, 0xd4, 0x0b, 0xa2, 0xd0, 0x03, 0x12, 0x12, 0xc8, 0x6d, 0x91, 0x40,
	0x48, 0x95, 0x6b, 0x0f, 0xc6, 0xc2, 0xf1, 0x9a, 0xdd, 0x75, 0xa4, 0x5c, 0xb9, 0x73, 0xe2, 0x01,
	0x78, 0x28, 0x5e, 0x81, 0x23, 0x37, 0x5e, 0x00, 0x65, 0x77, 0x1d, 0x92, 0xd6, 0x69, 0xc3, 0x29,
	0x9e, 0x9f, 0xef, 0x9b, 0xdd, 0x99, 0x6f, 0x36, 0x70, 0xa3, 0x08, 0xb9, 0xcc, 0x91, 0xfb, 0xe6,
	0xd7, 0x2b, 0x38, 0x93, 0x8c, 0x34, 0x8d, 0xe9, 0xae, 0x56, 0xf1, 0x2e, 0x8b, 0x31, 0xd3, 0x51,
	0x77, 0x23, 0x61, 0x2c, 0xc9, 0xd0, 0x0f, 0x8b, 0xd4, 0x0f, 0xf3, 0x9c, 0xc9, 0x50, 0xa6, 0x2c,
	0x17, 0x26, 0xba, 0x6e, 0xa2, 0xbc, 0x88, 0x7c, 0x21, 0x43, 0x59, 0x9a, 0x00, 0x6d, 0xc2, 0xec,
	0x61, 0xb7, 0x90, 0x7d, 0x7a, 0x02, 0xab, 0xcf, 0xa2, 0x88, 0x95, 0xb9, 0x7c, 0x99, 0x7f, 0x64,
	0x01, 0x8a, 0x82, 0xe5, 0x02, 0xc9, 0x22, 0xd8, 0x69, 0xdc, 0xb2, 0xb6, 0xac, 0xf6, 0x7c, 0x60,
	0xa7, 0x31, 0x71, 0xe1, 0x5a, 0xc4, 0x62, 0xcc, 0xc3, 0x2e, 0xb6, 0x6c, 0xe5, 0x1d, 0xda, 0x84,
	0xc0, 0x8c, 0xf2, 0x37, 0x94, 0x5f, 0x7d, 0xd3, 0x0c, 0x56, 0xdf, 0x22, 0x17, 0x29, 0xcb, 0xc7,
	0x68, 0x5b, 0xd0, 0x14, 0xc8, 0x7b, 0x69, 0x84, 0x86, 0xbb, 0x32, 0x07, 0x91, 0x9e, 0x06, 0x18,
	0xfe, 0xca, 0x24, 0xdb, 0xb0, 0x50, 0x16, 0x71, 0x28, 0x31, 0x3e, 0x95, 0xa9, 0x29, 0xd3, 0x08,
	0x1c, 0xe3, 0x3b, 0x4e, 0xbb, 0x48, 0x13, 0xb8, 0xf5, 0x02, 0xb3, 0xb4, 0x87, 0xbc, 0xff, 0x9a,
	0xc7, 0xc8, 0xc5, 0x73, 0x8e, 0xa1, 0xc4, 0x00, 0xbf, 0x94, 0x28, 0xe4, 0x80, 0xdb, 0xb4, 0xae,
	0xaa, 0x6a, 0x4c, 0xe2, 0xc1, 0x1c, 0x53, 0x80, 0x96, 0xbd, 0xd5, 0x68, 0x3b, 0x7b, 0x37, 0xbd,
	0xaa, 0xf7, 0x63, 0x7c, 0x81, 0xc9, 0xa2, 0xbf, 0x6d, 0xd8, 0xa8, 0xaf, 0x64, 0x2e, 0xf8, 0x01,
	0xae, 0xab, 0xd4, 0x53, 0x51, 0x46, 0x11, 0x0a, 0xd1, 0xb2, 0x14, 0xef, 0xe3, 0x7a, 0xde, 0x73,
	0x68, 0x4f, 0x39, 0x8f, 0x34, 0xf2, 0x30, 0x97, 0xbc, 0x1f, 0x2c, 0xb0, 0x11, 0x17, 0x79, 0x07,
	0xda, 0x3e, 0x45, 0xce, 0xd9, 0xf0, 0xd0, 0x8f, 0xfe, 0x83, 0xfc, 0x50, 0x01, 0x35, 0xb7, 0xc3,
	0xfe, 0x79, 0xdc, 0xa7, 0xb0, 0x72, 0xa1, 0x3a, 0x59, 0x86, 0xc6, 0x67, 0xec, 0x9b, 0xa6, 0x0d,
	0x3e, 0xc9, 0x1a, 0xcc, 0xf6, 0xc2, 0xac, 0xac, 0x44, 0xa0, 0x8d, 0x7d, 0xfb, 0x89, 0xe5, 0x06,
	0xb0, 0x7c, 0xbe, 0x42, 0x0d, 0xbe, 0x3d, 0x8a, 0x77, 0xf6, 0x88, 0xa7, 0x05, 0xea, 0xf1, 0x22,
	0xf2, 0x8e, 0x94, 0x40, 0x47, 0x38, 0xe9, 0x1d, 0xd8, 0x1e, 0xbf, 0xd2, 0x89, 0x1a, 0xba, 0x49,
	0xd4, 0xd3, 0xa5, 0x3b, 0x40, 0x2f, 0x4b, 0xd2, 0xb7, 0xa7, 0x9b, 0x17, 0x24, 0x12, 0xe6, 0x11,
	0x66, 0x15, 0xc9, 0xed, 0x0b, 0x73, 0x35, 0x61, 0x0d, 0xdf, 0xfb, 0x33, 0x03, 0xce, 0x41, 0x56,
	0xe2, 0x1b, 0x23, 0x9c, 0x57, 0xe0, 0x8c, 0xe8, 0x9b, 0x2c, 0x0e, 0x47, 0xa0, 0xb6, 0xca, 0xdd,
	0x18, 0xda, 0x35, 0x5b, 0x40, 0x97, 0xbe, 0xfe, 0xfc, 0xf5, 0xdd, 0x9e, 0x27, 0x4d, 0xb5, 0xb5,
	0xbd, 0x07, 0xe4, 0x18, 0x9c, 0x91, 0x25, 0xbc, 0x84, 0xad, 0x66, 0x55, 0xe9, 0xba, 0x62, 0x5b,
	0x21, 0x4b, 0x86, 0xcd, 0x0f, 0x75, 0x12, 0xf9, 0x66, 0xc1, 0x5a, 0x9d, 0x22, 0xc8, 0xce, 0x15,
	0x82, 0x51, 0x2d, 0x71, 0xef, 0x4e, 0x25, 0x2b, 0xda, 0x56, 0xe5, 0x29, 0xdd, 0xac, 0xca, 0x2b,
	0x55, 0xf9, 0xb1, 0xc1, 0xf8, 0x91, 0x4a, 0xdf, 0xb7, 0x3a, 0xe4, 0x87, 0x05, 0xee, 0xe4, 0x49,
	0x91, 0xce, 0x84, 0x7a, 0x35, 0x33, 0x77, 0xef, 0x4d, 0x95, 0x3b, 0xe5, 0x09, 0xf5, 0xc3, 0x38,
	0x38, 0x61, 0x4d, 0xc7, 0x94, 0x0c, 0x26, 0x77, 0x6c, 0x54, 0x44, 0x93, 0x3b, 0x36, 0xa6, 0xa5,
	0xab, 0x3b, 0xa6, 0xd2, 0xf7, 0xad, 0xce, 0xc1, 0xfd, 0xf7, 0x9d, 0x24, 0x95, 0x9f, 0xca, 0x33,
	0x2f, 0x62, 0x5d, 0x3f, 0x4f, 0x76, 0x7b, 0xa5, 0x9f, 0xb0, 0xdd, 0x84, 0x17, 0xd1, 0xae, 0x08,
	0xbb, 0x45, 0x86, 0x7e, 0x71, 0x56, 0xfd, 0x5d, 0x9c, 0xcd, 0xa9, 0xa7, 0xfd, 0xe1, 0xdf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xf9, 0x49, 0x08, 0xea, 0x48, 0x06, 0x00, 0x00,
}
